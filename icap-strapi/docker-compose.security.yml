# ðŸ”’ Banking Grade Docker Compose Configuration
# ICAP Banking Platform - Secure Deployment

version: '3.8'

services:
  # Strapi Backend (Internal Network)
  strapi:
    build:
      context: .
      dockerfile: Dockerfile.security
    container_name: icap-strapi-backend
    restart: unless-stopped
    networks:
      - internal_network
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      SESSION_SECRET: ${SESSION_SECRET}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - ./uploads:/opt/app/public/uploads
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - strapi_data:/opt/app/.tmp
    depends_on:
      - postgres
      - redis
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # PostgreSQL Database (Internal Network)
  postgres:
    image: postgres:15-alpine
    container_name: icap-postgres-db
    restart: unless-stopped
    networks:
      - internal_network
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis Cache (Internal Network)
  redis:
    image: redis:7-alpine
    container_name: icap-redis-cache
    restart: unless-stopped
    networks:
      - internal_network
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Load Balancer (DMZ)
  nginx:
    image: nginx:alpine
    container_name: icap-nginx-lb
    restart: unless-stopped
    networks:
      - dmz_network
      - internal_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - strapi
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/cache/nginx:noexec,nosuid,size=100m
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # React Frontend (DMZ)
  react-app:
    build:
      context: ../icap-website-ICAP_FIREBASE
      dockerfile: Dockerfile.production
    container_name: icap-react-frontend
    restart: unless-stopped
    networks:
      - dmz_network
    environment:
      REACT_APP_STRAPI_URL: https://api.icap-bank.com
      REACT_APP_API_URL: https://api.icap-bank.com/api
      NODE_ENV: production
    volumes:
      - react_build:/app/build
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Security Monitoring (Internal Network)
  monitoring:
    image: prom/prometheus:latest
    container_name: icap-monitoring
    restart: unless-stopped
    networks:
      - internal_network
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - monitoring_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    security_opt:
      - no-new-privileges:true
    read_only: false
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Log Aggregation (Internal Network)
  logstash:
    image: docker.elastic.co/logstash/logstash:8.8.0
    container_name: icap-logstash
    restart: unless-stopped
    networks:
      - internal_network
    volumes:
      - ./logging/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./logging/logs:/var/log/icap
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    security_opt:
      - no-new-privileges:true
    read_only: false
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backup Service (Internal Network)
  backup:
    image: postgres:15-alpine
    container_name: icap-backup-service
    restart: unless-stopped
    networks:
      - internal_network
    volumes:
      - ./backup:/backup
      - postgres_data:/var/lib/postgresql/data:ro
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    command: |
      sh -c '
        while true; do
          pg_dump -h postgres -U ${DATABASE_USERNAME} -d ${DATABASE_NAME} | gzip > /backup/backup-$(date +%Y%m%d-%H%M%S).sql.gz
          find /backup -name "backup-*.sql.gz" -mtime +7 -delete
          sleep 86400
        done
      '
    security_opt:
      - no-new-privileges:true
    read_only: false
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Networks for Security Segmentation
networks:
  dmz_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24
  internal_network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.1.0/24
    internal: true  # Internal network, no external access

# Volumes for Data Persistence
volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/icap/postgres_data
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/icap/redis_data
  strapi_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/icap/strapi_data
  react_build:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/icap/react_build
  monitoring_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/icap/monitoring_data

# Security Labels
labels:
  - "com.icap.security.level=banking"
  - "com.icap.compliance=pci-dss"
  - "com.icap.environment=production" 